<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VideoApiClient</name>
    </assembly>
    <members>
        <member name="T:VideoApiClient.Client.ApiVideoClient">
            <summary>
            Class that allows you to call all the api routes
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor">
            <summary>
            Build an instance that targets production environment without authentication
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor(VideoApiClient.Client.Environment)">
            <summary>
             Build an instance that targets the given environment without authentication
            </summary>
            <param name="environment">the target environment</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor(System.String)">
            <summary>
            Build an instance that targets the production environment with authentication
            </summary>
            <param name="apiKey">the api key to use to authenticate</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor(System.String,VideoApiClient.Client.Environment)">
            <summary>
            Build an instance that targets the given environment with authentication
            </summary>
            <param name="apiKey">the api key to use to authenticate</param>
            <param name="environment">environment the target environment</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor(RestSharp.RestClient)">
            <summary>
            Build an instance that targets the production environment using a custom OkHttp client
            </summary>
            <param name="client">the RestClient instance to use</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.#ctor(RestSharp.RestClient,VideoApiClient.Client.Environment)">
            <summary>
            Build an instance that targets the production environment using a custom OkHttp client
            </summary>
            <param name="client">the RestClient instance to use</param>
            <param name="environment">the target environment</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Account">
            <summary>
            Get an AccountApi instance
            </summary>
            <returns>AccountApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Captions">
            <summary>
            Get an CaptionsApi instance
            </summary>
            <returns>CaptionsApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Chapters">
            <summary>
            Get an ChaptersApi instance
            </summary>
            <returns>ChaptersApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Live">
            <summary>
            Get an LiveApi instance
            </summary>
            <returns>LiveApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Players">
            <summary>
            Get an PlayersApi instance
            </summary>
            <returns>PlayersApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.RawStatistics">
            <summary>
            Get an RawStatisticsApi instance
            </summary>
            <returns>RawStatisticsApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Videos">
            <summary>
            Get an VideosApi instance
            </summary>
            <returns>VideosApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.VideosDelegatedUpload">
            <summary>
            Get an VideosDelegatedUploadApi instance
            </summary>
            <returns>VideosDelegatedUploadApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.Webhooks">
            <summary>
            Get an WebhooksApi instance
            </summary>
            <returns>WebhooksApi</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.GetHttpClient">
            <summary>
            Gets the http client
            </summary>
            <returns>Current Api http client</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.GetUploadChunkSize">
            <summary>
            Gets the upload chunk size
            </summary>
            <returns>The upload chunk size</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoClient.SetUploadChunkSize(System.Int64)">
            <summary>
            Updates the upload chunk size
            </summary>
            <param name="uploadChunkSize">the new chunk size</param>
        </member>
        <member name="T:VideoApiClient.Client.ApiVideoExtensions">
            <summary>
            Provides Stream helpers methods
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiVideoExtensions.GetUrl(VideoApiClient.Client.Environment)">
            <summary>
            Returns the api URL of a given environment
            </summary>
            <param name="env">The environment to target</param>
            <returns>The environment url</returns>
        </member>
        <member name="T:VideoApiClient.Client.Environment">
            <summary>
            Environment to target
            </summary>
        </member>
        <member name="F:VideoApiClient.Client.Environment.PRODUCTION">
            <summary>
            Production environment
            </summary>
        </member>
        <member name="F:VideoApiClient.Client.Environment.SANDBOX">
            <summary>
            Sandbox environment
            </summary>
        </member>
        <member name="T:VideoApiClient.Client.ApiClient">
            <summary>
            API client is mainly responsible for making the HTTP call to the API backend.
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.InterceptRequest(RestSharp.IRestRequest)">
            <summary>
            Allows for extending request processing for <see cref="T:VideoApiClient.Client.ApiClient"/> generated code.
            </summary>
            <param name="request">The RestSharp request object</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.#ctor(System.String)">
            <summary>
            Constructor for ApiClient with custom basePath
            </summary>
            <param name="basePath">the api base path.</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.#ctor(System.String,System.String)">
            <summary>
            Constructor for ApiClient with custom API base path
            </summary>
            <param name="apiKey">the api key to use to authenticate to the API</param>
            <param name="basePath">the api base path.</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.#ctor(RestSharp.RestClient,System.String)">
            <summary>
            Constructor for ApiClient with custom http client.
            </summary>
            <param name="client">a RestClient instance used to make API call</param>
            <param name="basePath">the api base path.</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.GetTimeout">
            <summary>
            Get connection timeout (in milliseconds).
            </summary>
            <returns> Timeout in milliseconds</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.SetTimeout(System.Int32)">
            <summary>
             Sets the connect timeout (in milliseconds).
            A value of 0 means no timeout, otherwise values must be between 1 and max INT value.
            </summary>
            <param name="connectionTimeout">connection timeout in milliseconds.</param>
            <returns> Api client </returns>
        </member>
        <member name="P:VideoApiClient.Client.ApiClient.RestClient">
            <summary>
            Gets or sets the RestClient.
            </summary>
            <value>An instance of the RestClient</value>
        </member>
        <member name="P:VideoApiClient.Client.ApiClient.BasePath">
            <summary>
            Gets or sets the api base path.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:VideoApiClient.Client.ApiClient.UploadChunkSize">
            <summary>
            Gets or sets the file upload chunk size
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.CallApi(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            Makes the HTTP request (Sync).
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content Type of the request</param>
            <returns>Object</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.CallApiAsync(System.String,RestSharp.Method,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,RestSharp.FileParameter},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            Makes the asynchronous HTTP request.
            </summary>
            <param name="path">URL path.</param>
            <param name="method">HTTP method.</param>
            <param name="queryParams">Query parameters.</param>
            <param name="postBody">HTTP body (POST request).</param>
            <param name="headerParams">Header parameters.</param>
            <param name="formParams">Form parameters.</param>
            <param name="fileParams">File parameters.</param>
            <param name="pathParams">Path parameters.</param>
            <param name="contentType">Content type.</param>
            <param name="cancellationToken">Cancellation Token.</param>
            <returns>The Task instance.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.EscapeString(System.String)">
            <summary>
            Escape string (url-encoded).
            </summary>
            <param name="str">String to be escaped.</param>
            <returns>Escaped string.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.ParameterToFile(System.String,System.IO.Stream)">
            <summary>
            Create FileParameter based on Stream.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="stream">Input stream.</param>
            <returns>FileParameter.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.ParameterToString(System.Object)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601)
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.Deserialize(RestSharp.IRestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.Serialize(System.Object)">
            <summary>
            Serialize an input (model) into JSON string
            </summary>
            <param name="obj">Object.</param>
            <returns>JSON string.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.IsJsonMime(System.String)">
             <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
                application/json
                application/json; charset=UTF8
                APPLICATION/JSON
                application/vnd.company+json
             </summary>
             <param name="mime">MIME</param>
             <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">String to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.ConvertType(System.Object,System.Type)">
            <summary>
            Dynamically cast the object into target type.
            </summary>
            <param name="fromObject">Object to be casted</param>
            <param name="toObject">Target type</param>
            <returns>Casted object</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.UrlEncode(System.String)">
            <summary>
            URL encode a string
            Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50
            </summary>
            <param name="input">String to be URL encoded</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.ParameterToKeyValuePairs(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs. 
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="collectionFormat">Collection format.</param>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A list of KeyValuePairs</returns>
        </member>
        <member name="M:VideoApiClient.Client.ApiClient.IsCollection(System.Object)">
            <summary>
            Check if generic object is a collection.
            </summary>
            <param name="value"></param>
            <returns>True if object is a collection type</returns>
        </member>
        <member name="T:VideoApiClient.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:VideoApiClient.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:VideoApiClient.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="M:VideoApiClient.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:VideoApiClient.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:VideoApiClient.Client.ApiException.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
        </member>
        <member name="T:VideoApiClient.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:VideoApiClient.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:VideoApiClient.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:VideoApiClient.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="M:VideoApiClient.Client.ApiResponse`1.#ctor(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:VideoApiClient.Client.AuthenticationManager">
            <summary>
            Handle the client authentication methods
            </summary>
        </member>
        <member name="P:VideoApiClient.Client.AuthenticationManager.ApiKey">
            <summary>
            Gets or sets the api key.
            </summary>
            <value>The base path</value>
        </member>
        <member name="M:VideoApiClient.Client.AuthenticationManager.#ctor(System.String,VideoApiClient.Client.ApiClient)">
            <summary>
            Build an instance of authentication manager
            </summary>
            <param name="apiKey">the api key that will allow us to get the access token</param>
            <param name="apiClient">instance of the apiClient</param>
        </member>
        <member name="M:VideoApiClient.Client.AuthenticationManager.Intercept(RestSharp.IRestRequest)">
            <summary>
            Adds the authorization token to a request
            </summary>
            <param name="request">The request to update</param>
            <returns>The request updated</returns>
        </member>
        <member name="T:VideoApiClient.Api.AccountApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.AccountApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.AccountApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.AccountApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.AccountApi.get">
            <summary>
            Show account Deprecated. Authenticate and get a token, then you can use the bearer token here to retrieve details about your account.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>Account</returns>
        </member>
        <member name="M:VideoApiClient.Api.AccountApi.getWithHttpInfo">
            <summary>
            Show account Deprecated. Authenticate and get a token, then you can use the bearer token here to retrieve details about your account.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <returns>ApiResponse of Account</returns>
        </member>
        <member name="T:VideoApiClient.Api.AuthenticationApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.AuthenticationApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.AuthenticationApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.AuthenticationApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.AuthenticationApi.authenticate(VideoApiClient.Model.AuthenticatePayload)">
            <summary>
            Authenticate To get started, submit your API key in the body of your request. api.video returns an access token that is valid for one hour (3600 seconds). A refresh token is also returned. View a [tutorial](https://api.video/blog/tutorials/authentication-tutorial) on authentication.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authenticatePayload"> (optional)</param>
            <returns>AccessToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.AuthenticationApi.authenticateWithHttpInfo(VideoApiClient.Model.AuthenticatePayload)">
            <summary>
            Authenticate To get started, submit your API key in the body of your request. api.video returns an access token that is valid for one hour (3600 seconds). A refresh token is also returned. View a [tutorial](https://api.video/blog/tutorials/authentication-tutorial) on authentication.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="authenticatePayload"> (optional)</param>
            <returns>ApiResponse of AccessToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.AuthenticationApi.refresh(VideoApiClient.Model.RefreshTokenPayload)">
            <summary>
            Refresh token Use the refresh endpoint with the refresh token you received when you first authenticated using the api-key endpoint. Send the refresh token in the body of your request. The api.video API returns a new access token that is valid for one hour (3600 seconds) and a new refresh token.  
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="refreshTokenPayload"> (optional)</param>
            <returns>AccessToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.AuthenticationApi.refreshWithHttpInfo(VideoApiClient.Model.RefreshTokenPayload)">
            <summary>
            Refresh token Use the refresh endpoint with the refresh token you received when you first authenticated using the api-key endpoint. Send the refresh token in the body of your request. The api.video API returns a new access token that is valid for one hour (3600 seconds) and a new refresh token.  
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="refreshTokenPayload"> (optional)</param>
            <returns>ApiResponse of AccessToken</returns>
        </member>
        <member name="T:VideoApiClient.Api.CaptionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.CaptionsApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.CaptionsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.delete(System.String,System.String)">
            <summary>
            Delete a caption Delete a caption in a specific language by providing the video ID for the video you want to delete the caption from and the language the caption is in.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to delete a caption from.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.deleteWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a caption Delete a caption in a specific language by providing the video ID for the video you want to delete the caption from and the language the caption is in.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to delete a caption from.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.list(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video captions Retrieve a list of available captions for the videoId you provide.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve a list of captions for.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>CaptionsListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.listWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video captions Retrieve a list of available captions for the videoId you provide.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve a list of captions for.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of CaptionsListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.get(System.String,System.String)">
            <summary>
            Show a caption Display a caption for a video in a specific language. If the language is available, the caption is returned. Otherwise, you will get a response indicating the caption was not found.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want captions for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation</param>
            <returns>Subtitle</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.getWithHttpInfo(System.String,System.String)">
            <summary>
            Show a caption Display a caption for a video in a specific language. If the language is available, the caption is returned. Otherwise, you will get a response indicating the caption was not found.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want captions for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation</param>
            <returns>ApiResponse of Subtitle</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.update(System.String,System.String,VideoApiClient.Model.CaptionsUpdatePayload)">
            <summary>
            Update caption To have the captions on automatically, use this PATCH to set default: true.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to have automatic captions for. </param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <param name="captionsUpdatePayload"> (optional)</param>
            <returns>Subtitle</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.updateWithHttpInfo(System.String,System.String,VideoApiClient.Model.CaptionsUpdatePayload)">
            <summary>
            Update caption To have the captions on automatically, use this PATCH to set default: true.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to have automatic captions for. </param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <param name="captionsUpdatePayload"> (optional)</param>
            <returns>ApiResponse of Subtitle</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.upload(System.String,System.String,System.IO.Stream)">
            <summary>
            Upload a caption Upload a VTT file to add captions to your video.  Read our [captioning tutorial](https://api.video/blog/tutorials/adding-captions) for more details.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to add a caption to.</param>
            <param name="language">A valid BCP 47 language representation.</param>
            <param name="file">The video text track (VTT) you want to upload.</param>
            <returns>Subtitle</returns>
        </member>
        <member name="M:VideoApiClient.Api.CaptionsApi.uploadWithHttpInfo(System.String,System.String,System.IO.Stream)">
            <summary>
            Upload a caption Upload a VTT file to add captions to your video.  Read our [captioning tutorial](https://api.video/blog/tutorials/adding-captions) for more details.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to add a caption to.</param>
            <param name="language">A valid BCP 47 language representation.</param>
            <param name="file">The video text track (VTT) you want to upload.</param>
            <returns>ApiResponse of Subtitle</returns>
        </member>
        <member name="T:VideoApiClient.Api.ChaptersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.ChaptersApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.ChaptersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.delete(System.String,System.String)">
            <summary>
            Delete a chapter 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to delete a chapter from. </param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.deleteWithHttpInfo(System.String,System.String)">
            <summary>
            Delete a chapter 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to delete a chapter from. </param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.list(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video chapters Retrieve a list of all chapters for a specified video.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve a list of chapters for.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ChaptersListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.listWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video chapters Retrieve a list of all chapters for a specified video.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve a list of chapters for.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of ChaptersListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.get(System.String,System.String)">
            <summary>
            Show a chapter 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to show a chapter for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns>Chapter</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.getWithHttpInfo(System.String,System.String)">
            <summary>
            Show a chapter 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to show a chapter for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <returns>ApiResponse of Chapter</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.upload(System.String,System.String,System.IO.Stream)">
            <summary>
            Upload a chapter Chapters help break the video into sections. Read our [tutorial](https://api.video/blog/tutorials/adding-chapters-to-your-videos) for more details.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to upload a chapter for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <param name="file">The VTT file describing the chapters you want to upload.</param>
            <returns>Chapter</returns>
        </member>
        <member name="M:VideoApiClient.Api.ChaptersApi.uploadWithHttpInfo(System.String,System.String,System.IO.Stream)">
            <summary>
            Upload a chapter Chapters help break the video into sections. Read our [tutorial](https://api.video/blog/tutorials/adding-chapters-to-your-videos) for more details.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to upload a chapter for.</param>
            <param name="language">A valid [BCP 47](https://github.com/libyal/libfwnt/wiki/Language-Code-identifiers) language representation.</param>
            <param name="file">The VTT file describing the chapters you want to upload.</param>
            <returns>ApiResponse of Chapter</returns>
        </member>
        <member name="T:VideoApiClient.Api.LiveApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.LiveApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.LiveApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.delete(System.String)">
            <summary>
            Delete a live stream 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream that you want to remove.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.deleteWithHttpInfo(System.String)">
            <summary>
            Delete a live stream 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream that you want to remove.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.deleteThumbnail(System.String)">
            <summary>
            Delete a thumbnail Send the unique identifier for a live stream to delete it from the system.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique identifier for the live stream you want to delete. </param>
            <returns>LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.deleteThumbnailWithHttpInfo(System.String)">
            <summary>
            Delete a thumbnail Send the unique identifier for a live stream to delete it from the system.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique identifier for the live stream you want to delete. </param>
            <returns>ApiResponse of LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.list(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all live streams With no parameters added to the url, this will return all livestreams. Query by name or key to limit the list.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="streamKey">The unique stream key that allows you to stream videos. (optional)</param>
            <param name="name">You can filter live streams by their name or a part of their name. (optional)</param>
            <param name="sortBy">Allowed: createdAt, publishedAt, name. createdAt - the time a livestream was created using the specified streamKey. publishedAt - the time a livestream was published using the specified streamKey. name - the name of the livestream. If you choose one of the time based options, the time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending for date and time means that earlier values precede later ones. Descending means that later values preced earlier ones. For title, it is 0-9 and A-Z ascending and Z-A, 9-0 descending. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>LiveStreamListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.listWithHttpInfo(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all live streams With no parameters added to the url, this will return all livestreams. Query by name or key to limit the list.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="streamKey">The unique stream key that allows you to stream videos. (optional)</param>
            <param name="name">You can filter live streams by their name or a part of their name. (optional)</param>
            <param name="sortBy">Allowed: createdAt, publishedAt, name. createdAt - the time a livestream was created using the specified streamKey. publishedAt - the time a livestream was published using the specified streamKey. name - the name of the livestream. If you choose one of the time based options, the time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending for date and time means that earlier values precede later ones. Descending means that later values preced earlier ones. For title, it is 0-9 and A-Z ascending and Z-A, 9-0 descending. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of LiveStreamListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.get(System.String)">
            <summary>
            Show live stream Supply a LivestreamId, and you&#39;ll get all the details for streaming into, and watching the livestream.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream you want to watch.</param>
            <returns>LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.getWithHttpInfo(System.String)">
            <summary>
            Show live stream Supply a LivestreamId, and you&#39;ll get all the details for streaming into, and watching the livestream.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream you want to watch.</param>
            <returns>ApiResponse of LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.update(System.String,VideoApiClient.Model.LiveStreamUpdatePayload)">
            <summary>
            Update a live stream Use this endpoint to update the player, or to turn recording on/off (saving a copy of the livestream). NOTE: If the livestream is actively streaming, changing the recording status will only affect the NEXT stream.    The public&#x3D;false &#39;private livestream&#39; is available as a BETA feature, and should be limited to livestreams of 3,000 viewers or fewer.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream that you want to update information for such as player details, or whether you want the recording on or off.</param>
            <param name="liveStreamUpdatePayload"> (optional)</param>
            <returns>LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.updateWithHttpInfo(System.String,VideoApiClient.Model.LiveStreamUpdatePayload)">
            <summary>
            Update a live stream Use this endpoint to update the player, or to turn recording on/off (saving a copy of the livestream). NOTE: If the livestream is actively streaming, changing the recording status will only affect the NEXT stream.    The public&#x3D;false &#39;private livestream&#39; is available as a BETA feature, and should be limited to livestreams of 3,000 viewers or fewer.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream that you want to update information for such as player details, or whether you want the recording on or off.</param>
            <param name="liveStreamUpdatePayload"> (optional)</param>
            <returns>ApiResponse of LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.create(VideoApiClient.Model.LiveStreamCreatePayload)">
            <summary>
            Create live stream A live stream will give you the &#39;connection point&#39; to RTMP your video stream to api.video. It will also give you the details for viewers to watch the same livestream.  The public&#x3D;false &#39;private livestream&#39; is available as a BETA feature, and should be limited to livestreams of 3,000 viewers or fewer.  See our [Live Stream Tutorial](https://api.video/blog/tutorials/live-stream-tutorial) for a walkthrough of this API with OBS. Your RTMP endpoint for the livestream is rtmp://broadcast.api.video/s/{streamKey}
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamCreatePayload"> (optional)</param>
            <returns>LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.createWithHttpInfo(VideoApiClient.Model.LiveStreamCreatePayload)">
            <summary>
            Create live stream A live stream will give you the &#39;connection point&#39; to RTMP your video stream to api.video. It will also give you the details for viewers to watch the same livestream.  The public&#x3D;false &#39;private livestream&#39; is available as a BETA feature, and should be limited to livestreams of 3,000 viewers or fewer.  See our [Live Stream Tutorial](https://api.video/blog/tutorials/live-stream-tutorial) for a walkthrough of this API with OBS. Your RTMP endpoint for the livestream is rtmp://broadcast.api.video/s/{streamKey}
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamCreatePayload"> (optional)</param>
            <returns>ApiResponse of LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.uploadThumbnail(System.String,System.IO.Stream)">
            <summary>
            Upload a thumbnail Upload an image to use as a backdrop for your livestream.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream you want to upload.</param>
            <param name="file">The image to be added as a thumbnail.</param>
            <returns>LiveStream</returns>
        </member>
        <member name="M:VideoApiClient.Api.LiveApi.uploadThumbnailWithHttpInfo(System.String,System.IO.Stream)">
            <summary>
            Upload a thumbnail Upload an image to use as a backdrop for your livestream.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique ID for the live stream you want to upload.</param>
            <param name="file">The image to be added as a thumbnail.</param>
            <returns>ApiResponse of LiveStream</returns>
        </member>
        <member name="T:VideoApiClient.Api.PlayersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.PlayersApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.PlayersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.delete(System.String)">
            <summary>
            Delete a player Delete a player if you no longer need it. You can delete any player that you have the player ID for.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player you want to delete.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.deleteWithHttpInfo(System.String)">
            <summary>
            Delete a player Delete a player if you no longer need it. You can delete any player that you have the player ID for.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player you want to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.deleteLogo(System.String)">
            <summary>
            Delete logo 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <returns>Object</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.deleteLogoWithHttpInfo(System.String)">
            <summary>
            Delete logo 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <returns>ApiResponse of Object</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.list(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all players Retrieve a list of all the players you created, as well as details about each one.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sortBy">createdAt is the time the player was created. updatedAt is the time the player was last updated. The time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending for date and time means that earlier values precede later ones. Descending means that later values preced earlier ones. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>PlayersListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.listWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all players Retrieve a list of all the players you created, as well as details about each one.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sortBy">createdAt is the time the player was created. updatedAt is the time the player was last updated. The time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending for date and time means that earlier values precede later ones. Descending means that later values preced earlier ones. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of PlayersListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.get(System.String)">
            <summary>
            Show a player Use a player ID to retrieve details about the player and display it for viewers.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player you want to retrieve. </param>
            <returns>Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.getWithHttpInfo(System.String)">
            <summary>
            Show a player Use a player ID to retrieve details about the player and display it for viewers.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player you want to retrieve. </param>
            <returns>ApiResponse of Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.update(System.String,VideoApiClient.Model.PlayerUpdatePayload)">
            <summary>
            Update a player Use a player ID to update specific details for a player. NOTE: It may take up to 10 min before the new player configuration is available from our CDN.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <param name="playerUpdatePayload"></param>
            <returns>Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.updateWithHttpInfo(System.String,VideoApiClient.Model.PlayerUpdatePayload)">
            <summary>
            Update a player Use a player ID to update specific details for a player. NOTE: It may take up to 10 min before the new player configuration is available from our CDN.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <param name="playerUpdatePayload"></param>
            <returns>ApiResponse of Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.create(VideoApiClient.Model.PlayerCreationPayload)">
            <summary>
            Create a player Create a player for your video, and customise it.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerCreationPayload"></param>
            <returns>Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.createWithHttpInfo(VideoApiClient.Model.PlayerCreationPayload)">
            <summary>
            Create a player Create a player for your video, and customise it.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerCreationPayload"></param>
            <returns>ApiResponse of Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.uploadLogo(System.String,System.IO.Stream,System.String)">
            <summary>
            Upload a logo The uploaded image maximum size should be 200x100 and its weight should be 200KB.  It will be scaled down to 30px height and converted to PNG to be displayed in the player.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <param name="file">The name of the file you want to use for your logo.</param>
            <param name="link">The path to the file you want to upload and use as a logo.</param>
            <returns>Player</returns>
        </member>
        <member name="M:VideoApiClient.Api.PlayersApi.uploadLogoWithHttpInfo(System.String,System.IO.Stream,System.String)">
            <summary>
            Upload a logo The uploaded image maximum size should be 200x100 and its weight should be 200KB.  It will be scaled down to 30px height and converted to PNG to be displayed in the player.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="playerId">The unique identifier for the player.</param>
            <param name="file">The name of the file you want to use for your logo.</param>
            <param name="link">The path to the file you want to upload and use as a logo.</param>
            <returns>ApiResponse of Player</returns>
        </member>
        <member name="T:VideoApiClient.Api.RawStatisticsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.RawStatisticsApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.RawStatisticsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.getLiveStreamAnalytics(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List live stream player sessions 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique identifier for the live stream you want to retrieve analytics for.</param>
            <param name="period">Period must have one of the following formats:   - For a day : \&quot;2018-01-01\&quot;, - For a week: \&quot;2018-W01\&quot;,  - For a month: \&quot;2018-01\&quot; - For a year: \&quot;2018\&quot;  For a range period:  -  Date range: \&quot;2018-01-01/2018-01-15\&quot;  (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>RawStatisticsListLiveStreamAnalyticsResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.getLiveStreamAnalyticsWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List live stream player sessions 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="liveStreamId">The unique identifier for the live stream you want to retrieve analytics for.</param>
            <param name="period">Period must have one of the following formats:   - For a day : \&quot;2018-01-01\&quot;, - For a week: \&quot;2018-W01\&quot;,  - For a month: \&quot;2018-01\&quot; - For a year: \&quot;2018\&quot;  For a range period:  -  Date range: \&quot;2018-01-01/2018-01-15\&quot;  (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of RawStatisticsListLiveStreamAnalyticsResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.listPlayerSessionEvents(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List player session events Useful to track and measure video&#39;s engagement.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sessionId">A unique identifier you can use to reference and track a session with.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>RawStatisticsListPlayerSessionEventsResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.listPlayerSessionEventsWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List player session events Useful to track and measure video&#39;s engagement.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sessionId">A unique identifier you can use to reference and track a session with.</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of RawStatisticsListPlayerSessionEventsResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.listSessions(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video player sessions Retrieve all available user sessions for a specific video.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve session information for.</param>
            <param name="period">Period must have one of the following formats:   - For a day : 2018-01-01, - For a week: 2018-W01,  - For a month: 2018-01 - For a year: 2018  For a range period:  -  Date range: 2018-01-01/2018-01-15  (optional)</param>
            <param name="metadata">Metadata and Dynamic Metadata filter. Send an array of key value pairs you want to filter sessios with. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>RawStatisticsListSessionsResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.RawStatisticsApi.listSessionsWithHttpInfo(System.String,System.String,System.Collections.Generic.List{System.String},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List video player sessions Retrieve all available user sessions for a specific video.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want to retrieve session information for.</param>
            <param name="period">Period must have one of the following formats:   - For a day : 2018-01-01, - For a week: 2018-W01,  - For a month: 2018-01 - For a year: 2018  For a range period:  -  Date range: 2018-01-01/2018-01-15  (optional)</param>
            <param name="metadata">Metadata and Dynamic Metadata filter. Send an array of key value pairs you want to filter sessios with. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of RawStatisticsListSessionsResponse</returns>
        </member>
        <member name="T:VideoApiClient.Api.VideosApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.VideosApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.VideosApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.delete(System.String)">
            <summary>
            Delete a video If you do not need a video any longer, you can send a request to delete it. All you need is the videoId.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The video ID for the video you want to delete.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.deleteWithHttpInfo(System.String)">
            <summary>
            Delete a video If you do not need a video any longer, you can send a request to delete it. All you need is the videoId.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The video ID for the video you want to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.get(System.String)">
            <summary>
            Show a video This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url. Use this to retrieve any details you need about a video, or set up a private viewing URL.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want details about.</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.getWithHttpInfo(System.String)">
            <summary>
            Show a video This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url. Use this to retrieve any details you need about a video, or set up a private viewing URL.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want details about.</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.getVideoStatus(System.String)">
            <summary>
            Show video status This API provides upload status &amp; encoding status to determine when the video is uploaded or ready to playback.  Once encoding is completed, the response also lists the available stream qualities.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want the status for.</param>
            <returns>Videostatus</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.getVideoStatusWithHttpInfo(System.String)">
            <summary>
            Show video status This API provides upload status &amp; encoding status to determine when the video is uploaded or ready to playback.  Once encoding is completed, the response also lists the available stream qualities.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The unique identifier for the video you want the status for.</param>
            <returns>ApiResponse of Videostatus</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.list(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all videos Requests to this endpoint return a list of your videos (with all their details). With no parameters added to this query, the API returns all videos. You can filter what videos the API returns using the parameters described below.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="title">The title of a specific video you want to find. The search will match exactly to what term you provide and return any videos that contain the same term as part of their titles. (optional)</param>
            <param name="tags">A tag is a category you create and apply to videos. You can search for videos with particular tags by listing one or more here. Only videos that have all the tags you list will be returned. (optional)</param>
            <param name="metadata">Videos can be tagged with metadata tags in key:value pairs. You can search for videos with specific key value pairs using this parameter. (optional)</param>
            <param name="description">If you described a video with a term or sentence, you can add it here to return videos containing this string. (optional)</param>
            <param name="liveStreamId">If you know the ID for a live stream, you can retrieve the stream by adding the ID for it here. (optional)</param>
            <param name="sortBy">Allowed: publishedAt, title. You can search by the time videos were published at, or by title. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. asc is ascending and sorts from A to Z. desc is descending and sorts from Z to A. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>VideosListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.listWithHttpInfo(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all videos Requests to this endpoint return a list of your videos (with all their details). With no parameters added to this query, the API returns all videos. You can filter what videos the API returns using the parameters described below.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="title">The title of a specific video you want to find. The search will match exactly to what term you provide and return any videos that contain the same term as part of their titles. (optional)</param>
            <param name="tags">A tag is a category you create and apply to videos. You can search for videos with particular tags by listing one or more here. Only videos that have all the tags you list will be returned. (optional)</param>
            <param name="metadata">Videos can be tagged with metadata tags in key:value pairs. You can search for videos with specific key value pairs using this parameter. (optional)</param>
            <param name="description">If you described a video with a term or sentence, you can add it here to return videos containing this string. (optional)</param>
            <param name="liveStreamId">If you know the ID for a live stream, you can retrieve the stream by adding the ID for it here. (optional)</param>
            <param name="sortBy">Allowed: publishedAt, title. You can search by the time videos were published at, or by title. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. asc is ascending and sorts from A to Z. desc is descending and sorts from Z to A. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of VideosListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.update(System.String,VideoApiClient.Model.VideoUpdatePayload)">
            <summary>
            Update a video Use this endpoint to update the parameters associated with your video. The video you are updating is determined by the video ID you provide in the path. For each parameter you want to update, include the update in the request body. NOTE: If you are updating an array, you must provide the entire array as what you provide here overwrites what is in the system rather than appending to it.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The video ID for the video you want to delete.</param>
            <param name="videoUpdatePayload"> (optional)</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.updateWithHttpInfo(System.String,VideoApiClient.Model.VideoUpdatePayload)">
            <summary>
            Update a video Use this endpoint to update the parameters associated with your video. The video you are updating is determined by the video ID you provide in the path. For each parameter you want to update, include the update in the request body. NOTE: If you are updating an array, you must provide the entire array as what you provide here overwrites what is in the system rather than appending to it.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">The video ID for the video you want to delete.</param>
            <param name="videoUpdatePayload"> (optional)</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.pickThumbnail(System.String,VideoApiClient.Model.VideoThumbnailPickPayload)">
            <summary>
            Pick a thumbnail Pick a thumbnail from the given time code. If you&#39;d like to upload an image for your thumbnail, use the [Upload a Thumbnail](https://docs.api.video/reference#post_videos-videoid-thumbnail) endpoint. There may be a short delay for the thumbnail to update.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Unique identifier of the video you want to add a thumbnail to, where you use a section of your video as the thumbnail.</param>
            <param name="videoThumbnailPickPayload"> (optional)</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.pickThumbnailWithHttpInfo(System.String,VideoApiClient.Model.VideoThumbnailPickPayload)">
            <summary>
            Pick a thumbnail Pick a thumbnail from the given time code. If you&#39;d like to upload an image for your thumbnail, use the [Upload a Thumbnail](https://docs.api.video/reference#post_videos-videoid-thumbnail) endpoint. There may be a short delay for the thumbnail to update.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Unique identifier of the video you want to add a thumbnail to, where you use a section of your video as the thumbnail.</param>
            <param name="videoThumbnailPickPayload"> (optional)</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.create(VideoApiClient.Model.VideoCreatePayload)">
            <summary>
            Create a video To create a video, you create its metadata first, before adding the video file (exception - when using an existing HTTP source).  Videos are public by default. Mp4 encoded versions are created at the highest quality (max 1080p) by default.  &#x60;&#x60;&#x60;shell $ curl https://ws.api.video/videos \\ -H &#39;Authorization: Bearer {access_token} \\ -d &#39;{\&quot;title\&quot;:\&quot;My video\&quot;,       \&quot;description\&quot;:\&quot;so many details\&quot;,      \&quot;mp4Support\&quot;:true }&#39; &#x60;&#x60;&#x60;  ### Creating a hosted video   You can also create a video directly from one hosted on a third-party server by giving its URI in &#x60;source&#x60; parameter:  &#x60;&#x60;&#x60;shell $ curl https://ws.api.video/videos \\ -H &#39;Authorization: Bearer {access_token} \\ -d &#39;{\&quot;source\&quot;:\&quot;http://uri/to/video.mp4\&quot;, \&quot;title\&quot;:\&quot;My video\&quot;}&#39; &#x60;&#x60;&#x60;  In this case, the service will respond &#x60;202 Accepted&#x60; and download the video asynchronously.   We have tutorials on: * [Creating and uploading videos](https://api.video/blog/tutorials/video-upload-tutorial) * [Uploading large videos](https://api.video/blog/tutorials/video-upload-tutorial-large-videos) * [Using tags with videos](https://api.video/blog/tutorials/video-tagging-best-practices) * [Private videos](https://api.video/blog/tutorials/tutorial-private-videos) 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoCreatePayload">video to create (optional)</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.createWithHttpInfo(VideoApiClient.Model.VideoCreatePayload)">
            <summary>
            Create a video To create a video, you create its metadata first, before adding the video file (exception - when using an existing HTTP source).  Videos are public by default. Mp4 encoded versions are created at the highest quality (max 1080p) by default.  &#x60;&#x60;&#x60;shell $ curl https://ws.api.video/videos \\ -H &#39;Authorization: Bearer {access_token} \\ -d &#39;{\&quot;title\&quot;:\&quot;My video\&quot;,       \&quot;description\&quot;:\&quot;so many details\&quot;,      \&quot;mp4Support\&quot;:true }&#39; &#x60;&#x60;&#x60;  ### Creating a hosted video   You can also create a video directly from one hosted on a third-party server by giving its URI in &#x60;source&#x60; parameter:  &#x60;&#x60;&#x60;shell $ curl https://ws.api.video/videos \\ -H &#39;Authorization: Bearer {access_token} \\ -d &#39;{\&quot;source\&quot;:\&quot;http://uri/to/video.mp4\&quot;, \&quot;title\&quot;:\&quot;My video\&quot;}&#39; &#x60;&#x60;&#x60;  In this case, the service will respond &#x60;202 Accepted&#x60; and download the video asynchronously.   We have tutorials on: * [Creating and uploading videos](https://api.video/blog/tutorials/video-upload-tutorial) * [Uploading large videos](https://api.video/blog/tutorials/video-upload-tutorial-large-videos) * [Using tags with videos](https://api.video/blog/tutorials/video-tagging-best-practices) * [Private videos](https://api.video/blog/tutorials/tutorial-private-videos) 
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoCreatePayload">video to create (optional)</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.upload(System.String,System.IO.Stream)">
            <summary>
            Upload a video To upload a video to the videoId you created. Replace {videoId} with the id you&#39;d like to use, {access_token} with your token, and /path/to/video.mp4 with the path to the video you&#39;d like to upload. You can only upload your video to the videoId once.  &#x60;&#x60;&#x60;bash curl https://ws.api.video/videos/{videoId}/source \\   -H &#39;Authorization: Bearer {access_token}&#39; \\   -F file&#x3D;@/path/to/video.mp4   &#x60;&#x60;&#x60;
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Enter the videoId you want to use to upload your video.</param>
            <param name="file">The path to the video you would like to upload. The path must be local. If you want to use a video from an online source, you must use the \\\&quot;/videos\\\&quot; endpoint and add the \\\&quot;source\\\&quot; parameter when you create a new video.</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.uploadWithHttpInfo(System.String,System.IO.Stream)">
            <summary>
            Upload a video To upload a video to the videoId you created. Replace {videoId} with the id you&#39;d like to use, {access_token} with your token, and /path/to/video.mp4 with the path to the video you&#39;d like to upload. You can only upload your video to the videoId once.  &#x60;&#x60;&#x60;bash curl https://ws.api.video/videos/{videoId}/source \\   -H &#39;Authorization: Bearer {access_token}&#39; \\   -F file&#x3D;@/path/to/video.mp4   &#x60;&#x60;&#x60;
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Enter the videoId you want to use to upload your video.</param>
            <param name="file">The path to the video you would like to upload. The path must be local. If you want to use a video from an online source, you must use the \\\&quot;/videos\\\&quot; endpoint and add the \\\&quot;source\\\&quot; parameter when you create a new video.</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.uploadThumbnail(System.String,System.IO.Stream)">
            <summary>
            Upload a thumbnail In creating a thumbnail, you may either upload an image, or you can pick a time in the video to be used as thumbnail. This endpoint is for uploading an image. Use [Pick a Thumbnail](https://docs.api.video/reference#patch_videos-videoid-thumbnail) to pick a time in the video. There may be a short delay before the new thumbnail is delivered to our CDN.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Unique identifier of the chosen video </param>
            <param name="file">The image to be added as a thumbnail.</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosApi.uploadThumbnailWithHttpInfo(System.String,System.IO.Stream)">
            <summary>
            Upload a thumbnail In creating a thumbnail, you may either upload an image, or you can pick a time in the video to be used as thumbnail. This endpoint is for uploading an image. Use [Pick a Thumbnail](https://docs.api.video/reference#patch_videos-videoid-thumbnail) to pick a time in the video. There may be a short delay before the new thumbnail is delivered to our CDN.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="videoId">Unique identifier of the chosen video </param>
            <param name="file">The image to be added as a thumbnail.</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="T:VideoApiClient.Api.VideosDelegatedUploadApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.VideosDelegatedUploadApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.VideosDelegatedUploadApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.deleteToken(System.String)">
            <summary>
            Delete an upload token Delete an existing upload token. This is especially useful for tokens you may have created that do not expire.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadToken">The unique identifier for the upload token you want to delete. Deleting a token will make it so the token can no longer be used for authentication.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.deleteTokenWithHttpInfo(System.String)">
            <summary>
            Delete an upload token Delete an existing upload token. This is especially useful for tokens you may have created that do not expire.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadToken">The unique identifier for the upload token you want to delete. Deleting a token will make it so the token can no longer be used for authentication.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.listTokens(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all active upload tokens. A delegated token is used to allow secure uploads without exposing your API key. Use this endpoint to retrieve a list of all currently active delegated tokens.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sortBy">Allowed: createdAt, ttl. You can use these to sort by when a token was created, or how much longer the token will be active (ttl - time to live). Date and time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending is 0-9 or A-Z. Descending is 9-0 or Z-A. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>TokenListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.listTokensWithHttpInfo(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all active upload tokens. A delegated token is used to allow secure uploads without exposing your API key. Use this endpoint to retrieve a list of all currently active delegated tokens.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="sortBy">Allowed: createdAt, ttl. You can use these to sort by when a token was created, or how much longer the token will be active (ttl - time to live). Date and time is presented in ISO-8601 format. (optional)</param>
            <param name="sortOrder">Allowed: asc, desc. Ascending is 0-9 or A-Z. Descending is 9-0 or Z-A. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of TokenListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.getToken(System.String)">
            <summary>
            Show upload token You can retrieve details about a specific upload token if you have the unique identifier for the upload token. Add it in the path of the endpoint. Details include time-to-live (ttl), when the token was created, and when it will expire.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadToken">The unique identifier for the token you want information about.</param>
            <returns>UploadToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.getTokenWithHttpInfo(System.String)">
            <summary>
            Show upload token You can retrieve details about a specific upload token if you have the unique identifier for the upload token. Add it in the path of the endpoint. Details include time-to-live (ttl), when the token was created, and when it will expire.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="uploadToken">The unique identifier for the token you want information about.</param>
            <returns>ApiResponse of UploadToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.upload(System.String,System.IO.Stream)">
            <summary>
            Upload with an upload token When given a token, anyone can upload a file to the URI &#x60;https://ws.api.video/upload?token&#x3D;&lt;tokenId&gt;&#x60;.  Example with cURL:  &#x60;&#x60;&#x60;curl $ curl  - -request POST - -url &#39;https://ws.api.video/upload?token&#x3D;toXXX&#39;  - -header &#39;content-type: multipart/form-data&#39;  -F file&#x3D;@video.mp4 &#x60;&#x60;&#x60;  Or in an HTML form, with a little JavaScript to convert the form into JSON: &#x60;&#x60;&#x60;html &lt;!- -form for user interaction- -&gt; &lt;form name&#x3D;\&quot;videoUploadForm\&quot; &gt;   &lt;label for&#x3D;video&gt;Video:&lt;/label&gt;   &lt;input type&#x3D;file name&#x3D;source/&gt;&lt;br/&gt;   &lt;input value&#x3D;\&quot;Submit\&quot; type&#x3D;\&quot;submit\&quot;&gt; &lt;/form&gt; &lt;div&gt;&lt;/div&gt; &lt;!- -JS takes the form data      uses FormData to turn the response into JSON.     then uses POST to upload the video file.     Update the token parameter in the url to your upload token.     - -&gt; &lt;script&gt;    var form &#x3D; document.forms.namedItem(\&quot;videoUploadForm\&quot;);     form.addEventListener(&#39;submit&#39;, function(ev) {   ev.preventDefault();      var oOutput &#x3D; document.querySelector(\&quot;div\&quot;),          oData &#x3D; new FormData(form);      var oReq &#x3D; new XMLHttpRequest();         oReq.open(\&quot;POST\&quot;, \&quot;https://ws.api.video/upload?token&#x3D;toXXX\&quot;, true);      oReq.send(oData);   oReq.onload &#x3D; function(oEvent) {        if (oReq.status &#x3D;&#x3D;201) {          oOutput.innerHTML &#x3D; \&quot;Your video is uploaded!&lt;br/&gt;\&quot;  + oReq.response;        } else {          oOutput.innerHTML &#x3D; \&quot;Error \&quot; + oReq.status + \&quot; occurred when trying to upload your file.&lt;br /&gt;\&quot;;        }      };    }, false);  &lt;/script&gt; &#x60;&#x60;&#x60;   ### Dealing with large files  We have created a &lt;a href&#x3D;&#39;https://api.video/blog/tutorials/uploading-large-files-with-javascript&#39;&gt;tutorial&lt;/a&gt; to walk through the steps required.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="token">The unique identifier for the token you want to use to upload a video.</param>
            <param name="file">The path to the video you want to upload.</param>
            <returns>Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.uploadWithHttpInfo(System.String,System.IO.Stream)">
            <summary>
            Upload with an upload token When given a token, anyone can upload a file to the URI &#x60;https://ws.api.video/upload?token&#x3D;&lt;tokenId&gt;&#x60;.  Example with cURL:  &#x60;&#x60;&#x60;curl $ curl  - -request POST - -url &#39;https://ws.api.video/upload?token&#x3D;toXXX&#39;  - -header &#39;content-type: multipart/form-data&#39;  -F file&#x3D;@video.mp4 &#x60;&#x60;&#x60;  Or in an HTML form, with a little JavaScript to convert the form into JSON: &#x60;&#x60;&#x60;html &lt;!- -form for user interaction- -&gt; &lt;form name&#x3D;\&quot;videoUploadForm\&quot; &gt;   &lt;label for&#x3D;video&gt;Video:&lt;/label&gt;   &lt;input type&#x3D;file name&#x3D;source/&gt;&lt;br/&gt;   &lt;input value&#x3D;\&quot;Submit\&quot; type&#x3D;\&quot;submit\&quot;&gt; &lt;/form&gt; &lt;div&gt;&lt;/div&gt; &lt;!- -JS takes the form data      uses FormData to turn the response into JSON.     then uses POST to upload the video file.     Update the token parameter in the url to your upload token.     - -&gt; &lt;script&gt;    var form &#x3D; document.forms.namedItem(\&quot;videoUploadForm\&quot;);     form.addEventListener(&#39;submit&#39;, function(ev) {   ev.preventDefault();      var oOutput &#x3D; document.querySelector(\&quot;div\&quot;),          oData &#x3D; new FormData(form);      var oReq &#x3D; new XMLHttpRequest();         oReq.open(\&quot;POST\&quot;, \&quot;https://ws.api.video/upload?token&#x3D;toXXX\&quot;, true);      oReq.send(oData);   oReq.onload &#x3D; function(oEvent) {        if (oReq.status &#x3D;&#x3D;201) {          oOutput.innerHTML &#x3D; \&quot;Your video is uploaded!&lt;br/&gt;\&quot;  + oReq.response;        } else {          oOutput.innerHTML &#x3D; \&quot;Error \&quot; + oReq.status + \&quot; occurred when trying to upload your file.&lt;br /&gt;\&quot;;        }      };    }, false);  &lt;/script&gt; &#x60;&#x60;&#x60;   ### Dealing with large files  We have created a &lt;a href&#x3D;&#39;https://api.video/blog/tutorials/uploading-large-files-with-javascript&#39;&gt;tutorial&lt;/a&gt; to walk through the steps required.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="token">The unique identifier for the token you want to use to upload a video.</param>
            <param name="file">The path to the video you want to upload.</param>
            <returns>ApiResponse of Video</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.createToken(VideoApiClient.Model.TokenCreatePayload)">
            <summary>
            Generate an upload token Use this endpoint to generate an upload token. You can use this token to authenticate video uploads while keeping your API key safe.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenCreatePayload"> (optional)</param>
            <returns>UploadToken</returns>
        </member>
        <member name="M:VideoApiClient.Api.VideosDelegatedUploadApi.createTokenWithHttpInfo(VideoApiClient.Model.TokenCreatePayload)">
            <summary>
            Generate an upload token Use this endpoint to generate an upload token. You can use this token to authenticate video uploads while keeping your API key safe.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenCreatePayload"> (optional)</param>
            <returns>ApiResponse of UploadToken</returns>
        </member>
        <member name="T:VideoApiClient.Api.WebhooksApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="P:VideoApiClient.Api.WebhooksApi.ApiClient">
            <summary>
            Api Client Instance
            </summary>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.#ctor(VideoApiClient.Client.ApiClient)">
            <summary>
            Initializes a new instance of the <see cref="T:VideoApiClient.Api.WebhooksApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.delete(System.String)">
            <summary>
            Delete a Webhook This endpoint will delete the indicated webhook.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhookId">The webhook you wish to delete.</param>
            <returns></returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.deleteWithHttpInfo(System.String)">
            <summary>
            Delete a Webhook This endpoint will delete the indicated webhook.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhookId">The webhook you wish to delete.</param>
            <returns>ApiResponse of Object(void)</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.get(System.String)">
            <summary>
            Show Webhook details This call provides the same JSON information provided on Webjhook creation.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhookId">The unique webhook you wish to retreive details on.</param>
            <returns>Webhook</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.getWithHttpInfo(System.String)">
            <summary>
            Show Webhook details This call provides the same JSON information provided on Webjhook creation.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhookId">The unique webhook you wish to retreive details on.</param>
            <returns>ApiResponse of Webhook</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.list(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all webhooks Requests to this endpoint return a list of your webhooks (with all their details). You can filter what the webhook list that the API returns using the parameters described below.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="events">The webhook event that you wish to filter on. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>WebhooksListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.listWithHttpInfo(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            List all webhooks Requests to this endpoint return a list of your webhooks (with all their details). You can filter what the webhook list that the API returns using the parameters described below.
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="events">The webhook event that you wish to filter on. (optional)</param>
            <param name="currentPage">Choose the number of search results to return per page. Minimum value: 1 (optional, default to 1)</param>
            <param name="pageSize">Results per page. Allowed values 1-100, default is 25. (optional, default to 25)</param>
            <returns>ApiResponse of WebhooksListResponse</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.create(VideoApiClient.Model.WebhooksCreatePayload)">
            <summary>
            Create Webhook Webhooks can push notifications to your server, rather than polling api.video for changes
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhooksCreatePayload"> (optional)</param>
            <returns>Webhook</returns>
        </member>
        <member name="M:VideoApiClient.Api.WebhooksApi.createWithHttpInfo(VideoApiClient.Model.WebhooksCreatePayload)">
            <summary>
            Create Webhook Webhooks can push notifications to your server, rather than polling api.video for changes
            </summary>
            <exception cref="T:VideoApiClient.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="webhooksCreatePayload"> (optional)</param>
            <returns>ApiResponse of Webhook</returns>
        </member>
        <member name="T:VideoApiClient.Model.AccessToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.AccessToken.accesstoken">
            <summary>
            The access token containing security credentials allowing you to acccess the API. The token lasts for one hour.
            </summary>
            <value>The access token containing security credentials allowing you to acccess the API. The token lasts for one hour.</value>
        </member>
        <member name="P:VideoApiClient.Model.AccessToken.tokentype">
            <summary>
            The type of token you have.
            </summary>
            <value>The type of token you have.</value>
        </member>
        <member name="P:VideoApiClient.Model.AccessToken.refreshtoken">
            <summary>
            A token you can use to get the next access token when your current access token expires.
            </summary>
            <value>A token you can use to get the next access token when your current access token expires.</value>
        </member>
        <member name="P:VideoApiClient.Model.AccessToken.expiresin">
            <summary>
            Lists the time in seconds when your access token expires. It lasts for one hour.
            </summary>
            <value>Lists the time in seconds when your access token expires. It lasts for one hour.</value>
        </member>
        <member name="M:VideoApiClient.Model.AccessToken.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.AccessToken.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Account">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Account.quota">
            <summary>
            Gets or Sets Quota
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Account.features">
            <summary>
            Deprecated. What features are enabled for your account. Choices include: app.dynamic_metadata - the ability to dynamically tag videos to better segment and understand your audiences, app.event_log - the ability to create and retrieve a log detailing how your videos were interacted with, player.white_label - the ability to customise your player, stats.player_events - the ability to see statistics about how your player is being used, transcode.mp4_support - the ability to reformat content into mp4 using the H264 codec.
            </summary>
            <value>Deprecated. What features are enabled for your account. Choices include: app.dynamic_metadata - the ability to dynamically tag videos to better segment and understand your audiences, app.event_log - the ability to create and retrieve a log detailing how your videos were interacted with, player.white_label - the ability to customise your player, stats.player_events - the ability to see statistics about how your player is being used, transcode.mp4_support - the ability to reformat content into mp4 using the H264 codec.</value>
        </member>
        <member name="P:VideoApiClient.Model.Account.environment">
            <summary>
            Deprecated. Whether you are using your production or sandbox API key will impact what environment is displayed here, as well as stats and features information. If you use your sandbox key, the environment is \"sandbox.\" If you use your production key, the environment is \"production.\"
            </summary>
            <value>Deprecated. Whether you are using your production or sandbox API key will impact what environment is displayed here, as well as stats and features information. If you use your sandbox key, the environment is \"sandbox.\" If you use your production key, the environment is \"production.\"</value>
        </member>
        <member name="M:VideoApiClient.Model.Account.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Account.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.AccountQuota">
            <summary>
            Deprecated
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.AccountQuota.quotaused">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.AccountQuota.quotaremaining">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.AccountQuota.quotatotal">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="M:VideoApiClient.Model.AccountQuota.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.AccountQuota.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.AuthenticatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.AuthenticatePayload.apikey">
            <summary>
            Your account API key. You can use your sandbox API key, or you can use your production API key.
            </summary>
            <value>Your account API key. You can use your sandbox API key, or you can use your production API key.</value>
        </member>
        <member name="M:VideoApiClient.Model.AuthenticatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.AuthenticatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.BadRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BadRequest.type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BadRequest.title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BadRequest.name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BadRequest.status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BadRequest.problems">
            <summary>
            Gets or Sets Problems
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.BadRequest.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.BadRequest.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.BytesRange">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.BytesRange.from">
            <summary>
            The starting point for the range of bytes for a chunk of a video.
            </summary>
            <value>The starting point for the range of bytes for a chunk of a video.</value>
        </member>
        <member name="P:VideoApiClient.Model.BytesRange.to">
            <summary>
            The ending point for the range of bytes for a chunk of a video.
            </summary>
            <value>The ending point for the range of bytes for a chunk of a video.</value>
        </member>
        <member name="P:VideoApiClient.Model.BytesRange.total">
            <summary>
            The total number of bytes in the provided range.
            </summary>
            <value>The total number of bytes in the provided range.</value>
        </member>
        <member name="M:VideoApiClient.Model.BytesRange.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.BytesRange.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.CaptionsListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.CaptionsListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.CaptionsListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.CaptionsListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.CaptionsListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.CaptionsUpdatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.CaptionsUpdatePayload._default">
            <summary>
            Gets or Sets Default
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.CaptionsUpdatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.CaptionsUpdatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Chapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Chapter.uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Chapter.src">
            <summary>
            The link to your VTT file, which contains your chapters information for the video.
            </summary>
            <value>The link to your VTT file, which contains your chapters information for the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.Chapter.language">
            <summary>
            Gets or Sets Language
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.Chapter.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Chapter.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.ChaptersListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.ChaptersListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.ChaptersListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.ChaptersListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.ChaptersListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Link">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Link.rel">
            <summary>
            Gets or Sets Rel
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Link.uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.Link.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Link.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStream">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.livestreamid">
            <summary>
            The unique identifier for the live stream. Live stream IDs begin with \"li.\"
            </summary>
            <value>The unique identifier for the live stream. Live stream IDs begin with \"li.\"</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.name">
            <summary>
            The name of your live stream.
            </summary>
            <value>The name of your live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.streamkey">
            <summary>
            The unique, private stream key that you use to begin streaming.
            </summary>
            <value>The unique, private stream key that you use to begin streaming.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.record">
            <summary>
            Whether you are recording or not.
            </summary>
            <value>Whether you are recording or not.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream._public">
            <summary>
            BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
            </summary>
            <value>BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.assets">
            <summary>
            Gets or Sets Assets
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.playerid">
            <summary>
            The unique identifier for the player.
            </summary>
            <value>The unique identifier for the player.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStream.broadcasting">
            <summary>
            Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not.
            </summary>
            <value>Whether or not you are broadcasting the live video you recorded for others to see. True means you are broadcasting to viewers, false means you are not.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStream.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStream.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamAssets">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamAssets.hls">
            <summary>
            The http live streaming (HLS) link for your live video stream.
            </summary>
            <value>The http live streaming (HLS) link for your live video stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamAssets.iframe">
            <summary>
            The embed code for the iframe containing your live video stream.
            </summary>
            <value>The embed code for the iframe containing your live video stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamAssets.player">
            <summary>
            A link to the video player that is playing your live stream.
            </summary>
            <value>A link to the video player that is playing your live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamAssets.thumbnail">
            <summary>
            A link to the thumbnail for your video.
            </summary>
            <value>A link to the thumbnail for your video.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamAssets.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamAssets.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamCreatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamCreatePayload.name">
            <summary>
            Add a name for your live stream here.
            </summary>
            <value>Add a name for your live stream here.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamCreatePayload.record">
            <summary>
            Whether you are recording or not. True for record, false for not record.
            </summary>
            <value>Whether you are recording or not. True for record, false for not record.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamCreatePayload._public">
            <summary>
            BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
            </summary>
            <value>BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamCreatePayload.playerid">
            <summary>
            The unique identifier for the player.
            </summary>
            <value>The unique identifier for the player.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamCreatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamCreatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession.session">
            <summary>
            Gets or Sets Session
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession.location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession.referrer">
            <summary>
            Gets or Sets Referrer
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession.device">
            <summary>
            Gets or Sets Device
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession.os">
            <summary>
            Gets or Sets Os
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSession._client">
            <summary>
            Gets or Sets _Client
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSession.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSession.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSessionClient">
            <summary>
            What kind of browser the viewer is using for the live stream session.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionClient.name">
            <summary>
            The name of the browser used to view the live stream session.
            </summary>
            <value>The name of the browser used to view the live stream session.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionClient.version">
            <summary>
            The version of the browser used to view the live stream session.
            </summary>
            <value>The version of the browser used to view the live stream session.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionClient.type">
            <summary>
            The type of client used to view the live stream session.
            </summary>
            <value>The type of client used to view the live stream session.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionClient.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionClient.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSessionDevice">
            <summary>
            What type of device the user is on when in the live stream session.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionDevice.type">
            <summary>
            What the type is like desktop, laptop, mobile.
            </summary>
            <value>What the type is like desktop, laptop, mobile.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionDevice.vendor">
            <summary>
            If known, what the brand of the device is, like Apple, Dell, etc.
            </summary>
            <value>If known, what the brand of the device is, like Apple, Dell, etc.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionDevice.model">
            <summary>
            The specific model of the device, if known.
            </summary>
            <value>The specific model of the device, if known.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionDevice.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionDevice.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSessionLocation">
            <summary>
            The location of the viewer of the live stream.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionLocation.country">
            <summary>
            The country of the viewer of the live stream.
            </summary>
            <value>The country of the viewer of the live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionLocation.city">
            <summary>
            The city of the viewer of the live stream.
            </summary>
            <value>The city of the viewer of the live stream.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionLocation.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionLocation.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSessionReferrer">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionReferrer.url">
            <summary>
            The website the viewer of the live stream was referred to in order to view the live stream.
            </summary>
            <value>The website the viewer of the live stream was referred to in order to view the live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionReferrer.medium">
            <summary>
            The type of search that brought the viewer to the live stream. Organic would be they found it on their own, paid would be they found it via an advertisement.
            </summary>
            <value>The type of search that brought the viewer to the live stream. Organic would be they found it on their own, paid would be they found it via an advertisement.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionReferrer.source">
            <summary>
            Where the viewer came from to see the live stream (usually where they searched from).
            </summary>
            <value>Where the viewer came from to see the live stream (usually where they searched from).</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionReferrer.searchterm">
            <summary>
            What term they searched for that led them to the live stream.
            </summary>
            <value>What term they searched for that led them to the live stream.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionReferrer.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionReferrer.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamSessionSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionSession.sessionid">
            <summary>
            A unique identifier for your session. You can use this to track what happens during a specific session.
            </summary>
            <value>A unique identifier for your session. You can use this to track what happens during a specific session.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionSession.loadedat">
            <summary>
            When the session started, with the date and time presented in ISO-8601 format.
            </summary>
            <value>When the session started, with the date and time presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamSessionSession.endedat">
            <summary>
            When the session ended, with the date and time presented in ISO-8601 format.
            </summary>
            <value>When the session ended, with the date and time presented in ISO-8601 format.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionSession.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamSessionSession.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.LiveStreamUpdatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamUpdatePayload.name">
            <summary>
            The name you want to use for your live stream.
            </summary>
            <value>The name you want to use for your live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamUpdatePayload._public">
            <summary>
            BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
            </summary>
            <value>BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamUpdatePayload.record">
            <summary>
            Use this to indicate whether you want the recording on or off. On is true, off is false.
            </summary>
            <value>Use this to indicate whether you want the recording on or off. On is true, off is false.</value>
        </member>
        <member name="P:VideoApiClient.Model.LiveStreamUpdatePayload.playerid">
            <summary>
            The unique ID for the player associated with a live stream that you want to update.
            </summary>
            <value>The unique ID for the player associated with a live stream that you want to update.</value>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamUpdatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.LiveStreamUpdatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Metadata.key">
            <summary>
            The constant that defines the data set.
            </summary>
            <value>The constant that defines the data set.</value>
        </member>
        <member name="P:VideoApiClient.Model.Metadata.value">
            <summary>
            A variable which belongs to the data set.
            </summary>
            <value>A variable which belongs to the data set.</value>
        </member>
        <member name="M:VideoApiClient.Model.Metadata.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Metadata.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.NotFound">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.NotFound.type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.NotFound.title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.NotFound.name">
            <summary>
            Gets or Sets Name
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.NotFound.status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.NotFound.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.NotFound.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Pagination">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.itemstotal">
            <summary>
            Total number of items that exist.
            </summary>
            <value>Total number of items that exist.</value>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.pagestotal">
            <summary>
            Number of items listed in the current page.
            </summary>
            <value>Number of items listed in the current page.</value>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.pagesize">
            <summary>
            Maximum number of item per page.
            </summary>
            <value>Maximum number of item per page.</value>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.currentpage">
            <summary>
            The current page index.
            </summary>
            <value>The current page index.</value>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.currentpageitems">
            <summary>
            The number of items on the current page.
            </summary>
            <value>The number of items on the current page.</value>
        </member>
        <member name="P:VideoApiClient.Model.Pagination.links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.Pagination.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Pagination.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PaginationLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PaginationLink.rel">
            <summary>
            Gets or Sets Rel
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PaginationLink.uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.PaginationLink.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PaginationLink.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Player">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Player.text">
            <summary>
            RGBA color for timer text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for timer text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.link">
            <summary>
            RGBA color for all controls. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.linkhover">
            <summary>
            RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.trackplayed">
            <summary>
            RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)
            </summary>
            <value>RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.trackunplayed">
            <summary>
            RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)
            </summary>
            <value>RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.trackbackground">
            <summary>
            RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)
            </summary>
            <value>RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.backgroundtop">
            <summary>
            RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.backgroundbottom">
            <summary>
            RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.backgroundtext">
            <summary>
            RGBA color for title text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for title text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.enableapi">
            <summary>
            enable/disable player SDK access. Default: true
            </summary>
            <value>enable/disable player SDK access. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.enablecontrols">
            <summary>
            enable/disable player controls. Default: true
            </summary>
            <value>enable/disable player controls. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.forceautoplay">
            <summary>
            enable/disable player autoplay. Default: false
            </summary>
            <value>enable/disable player autoplay. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.hidetitle">
            <summary>
            enable/disable title. Default: false
            </summary>
            <value>enable/disable title. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.forceloop">
            <summary>
            enable/disable looping. Default: false
            </summary>
            <value>enable/disable looping. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.playerid">
            <summary>
            Gets or Sets PlayerId
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Player.createdat">
            <summary>
            When the player was created, presented in ISO-8601 format.
            </summary>
            <value>When the player was created, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.updatedat">
            <summary>
            When the player was last updated, presented in ISO-8601 format.
            </summary>
            <value>When the player was last updated, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.shapemargin">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.shaperadius">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.shapeaspect">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.shapebackgroundtop">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.shapebackgroundbottom">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.linkactive">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.Player.assets">
            <summary>
            Gets or Sets Assets
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.Player.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Player.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayerAllOf">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.playerid">
            <summary>
            Gets or Sets PlayerId
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.createdat">
            <summary>
            When the player was created, presented in ISO-8601 format.
            </summary>
            <value>When the player was created, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.updatedat">
            <summary>
            When the player was last updated, presented in ISO-8601 format.
            </summary>
            <value>When the player was last updated, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.shapemargin">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.shaperadius">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.shapeaspect">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.shapebackgroundtop">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.shapebackgroundbottom">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.linkactive">
            <summary>
            Deprecated
            </summary>
            <value>Deprecated</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOf.assets">
            <summary>
            Gets or Sets Assets
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.PlayerAllOf.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayerAllOf.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayerAllOfAssets">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOfAssets.logo">
            <summary>
            The name of the file containing the logo you want to use.
            </summary>
            <value>The name of the file containing the logo you want to use.</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerAllOfAssets.link">
            <summary>
            The path to the file containing your logo.
            </summary>
            <value>The path to the file containing your logo.</value>
        </member>
        <member name="M:VideoApiClient.Model.PlayerAllOfAssets.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayerAllOfAssets.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayerCreationPayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.text">
            <summary>
            RGBA color for timer text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for timer text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.link">
            <summary>
            RGBA color for all controls. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.linkhover">
            <summary>
            RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.trackplayed">
            <summary>
            RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)
            </summary>
            <value>RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.trackunplayed">
            <summary>
            RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)
            </summary>
            <value>RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.trackbackground">
            <summary>
            RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)
            </summary>
            <value>RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.backgroundtop">
            <summary>
            RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.backgroundbottom">
            <summary>
            RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.backgroundtext">
            <summary>
            RGBA color for title text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for title text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.enableapi">
            <summary>
            enable/disable player SDK access. Default: true
            </summary>
            <value>enable/disable player SDK access. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.enablecontrols">
            <summary>
            enable/disable player controls. Default: true
            </summary>
            <value>enable/disable player controls. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.forceautoplay">
            <summary>
            enable/disable player autoplay. Default: false
            </summary>
            <value>enable/disable player autoplay. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.hidetitle">
            <summary>
            enable/disable title. Default: false
            </summary>
            <value>enable/disable title. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerCreationPayload.forceloop">
            <summary>
            enable/disable looping. Default: false
            </summary>
            <value>enable/disable looping. Default: false</value>
        </member>
        <member name="M:VideoApiClient.Model.PlayerCreationPayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayerCreationPayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Playerinput">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.text">
            <summary>
            RGBA color for timer text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for timer text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.link">
            <summary>
            RGBA color for all controls. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.linkhover">
            <summary>
            RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.trackplayed">
            <summary>
            RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)
            </summary>
            <value>RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.trackunplayed">
            <summary>
            RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)
            </summary>
            <value>RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.trackbackground">
            <summary>
            RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)
            </summary>
            <value>RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.backgroundtop">
            <summary>
            RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.backgroundbottom">
            <summary>
            RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.backgroundtext">
            <summary>
            RGBA color for title text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for title text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.enableapi">
            <summary>
            enable/disable player SDK access. Default: true
            </summary>
            <value>enable/disable player SDK access. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.enablecontrols">
            <summary>
            enable/disable player controls. Default: true
            </summary>
            <value>enable/disable player controls. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.forceautoplay">
            <summary>
            enable/disable player autoplay. Default: false
            </summary>
            <value>enable/disable player autoplay. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.hidetitle">
            <summary>
            enable/disable title. Default: false
            </summary>
            <value>enable/disable title. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.Playerinput.forceloop">
            <summary>
            enable/disable looping. Default: false
            </summary>
            <value>enable/disable looping. Default: false</value>
        </member>
        <member name="M:VideoApiClient.Model.Playerinput.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Playerinput.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayerSessionEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerSessionEvent.type">
            <summary>
            Possible values are: ready, play, pause, resume, seek.backward, seek.forward, end
            </summary>
            <value>Possible values are: ready, play, pause, resume, seek.backward, seek.forward, end</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerSessionEvent.emittedat">
            <summary>
            When an event occurred, presented in ISO-8601 format.
            </summary>
            <value>When an event occurred, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerSessionEvent.at">
            <summary>
            Gets or Sets At
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerSessionEvent.from">
            <summary>
            Gets or Sets From
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerSessionEvent.to">
            <summary>
            Gets or Sets To
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.PlayerSessionEvent.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayerSessionEvent.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayersListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayersListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayersListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.PlayersListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayersListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.PlayerUpdatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.text">
            <summary>
            RGBA color for timer text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for timer text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.link">
            <summary>
            RGBA color for all controls. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.linkhover">
            <summary>
            RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for all controls when hovered. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.trackplayed">
            <summary>
            RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)
            </summary>
            <value>RGBA color playback bar: played content. Default: rgba(88, 131, 255, .95)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.trackunplayed">
            <summary>
            RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)
            </summary>
            <value>RGBA color playback bar: downloaded but unplayed (buffered) content. Default: rgba(255, 255, 255, .35)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.trackbackground">
            <summary>
            RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)
            </summary>
            <value>RGBA color playback bar: background. Default: rgba(255, 255, 255, .2)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.backgroundtop">
            <summary>
            RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: top 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.backgroundbottom">
            <summary>
            RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)
            </summary>
            <value>RGBA color: bottom 50% of background. Default: rgba(0, 0, 0, .7)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.backgroundtext">
            <summary>
            RGBA color for title text. Default: rgba(255, 255, 255, 1)
            </summary>
            <value>RGBA color for title text. Default: rgba(255, 255, 255, 1)</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.enableapi">
            <summary>
            enable/disable player SDK access. Default: true
            </summary>
            <value>enable/disable player SDK access. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.enablecontrols">
            <summary>
            enable/disable player controls. Default: true
            </summary>
            <value>enable/disable player controls. Default: true</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.forceautoplay">
            <summary>
            enable/disable player autoplay. Default: false
            </summary>
            <value>enable/disable player autoplay. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.hidetitle">
            <summary>
            enable/disable title. Default: false
            </summary>
            <value>enable/disable title. Default: false</value>
        </member>
        <member name="P:VideoApiClient.Model.PlayerUpdatePayload.forceloop">
            <summary>
            enable/disable looping. Default: false
            </summary>
            <value>enable/disable looping. Default: false</value>
        </member>
        <member name="M:VideoApiClient.Model.PlayerUpdatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.PlayerUpdatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Quality">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Quality._quality">
            <summary>
            The quality of the video you have, in pixels. Choices include 360p, 480p, 720p, 1080p, and 2160p.
            </summary>
            <value>The quality of the video you have, in pixels. Choices include 360p, 480p, 720p, 1080p, and 2160p.</value>
        </member>
        <member name="P:VideoApiClient.Model.Quality.status">
            <summary>
            The status of your video. Statuses include waiting - the video is waiting to be encoded. encoding - the video is in the process of being encoded. encoded - the video was successfully encoded. failed - the video failed to be encoded.
            </summary>
            <value>The status of your video. Statuses include waiting - the video is waiting to be encoded. encoding - the video is in the process of being encoded. encoded - the video was successfully encoded. failed - the video failed to be encoded.</value>
        </member>
        <member name="M:VideoApiClient.Model.Quality.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Quality.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.RawStatisticsListLiveStreamAnalyticsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListLiveStreamAnalyticsResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListLiveStreamAnalyticsResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListLiveStreamAnalyticsResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListLiveStreamAnalyticsResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.RawStatisticsListPlayerSessionEventsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListPlayerSessionEventsResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListPlayerSessionEventsResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListPlayerSessionEventsResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListPlayerSessionEventsResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.RawStatisticsListSessionsResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListSessionsResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RawStatisticsListSessionsResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListSessionsResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.RawStatisticsListSessionsResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.RefreshTokenPayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.RefreshTokenPayload.refreshtoken">
            <summary>
            The refresh token is either the first refresh token you received when you authenticated with the auth/api-key endpoint, or it's the refresh token from the last time you used the auth/refresh endpoint. Place this in the body of your request to obtain a new access token (which is valid for an hour) and a new refresh token. 
            </summary>
            <value>The refresh token is either the first refresh token you received when you authenticated with the auth/api-key endpoint, or it's the refresh token from the last time you used the auth/refresh endpoint. Place this in the body of your request to obtain a new access token (which is valid for an hour) and a new refresh token. </value>
        </member>
        <member name="M:VideoApiClient.Model.RefreshTokenPayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.RefreshTokenPayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Subtitle">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Subtitle.uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Subtitle.src">
            <summary>
            Gets or Sets Src
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Subtitle.srclang">
            <summary>
            Gets or Sets Srclang
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Subtitle._default">
            <summary>
            Whether you will have subtitles or not. True for yes you will have subtitles, false for no you will not have subtitles.
            </summary>
            <value>Whether you will have subtitles or not. True for yes you will have subtitles, false for no you will not have subtitles.</value>
        </member>
        <member name="M:VideoApiClient.Model.Subtitle.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Subtitle.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.TokenCreatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.TokenCreatePayload.ttl">
            <summary>
            Time in seconds that the token will be active. A value of 0 means that the token has no exipration date. The default is to have no expiration.
            </summary>
            <value>Time in seconds that the token will be active. A value of 0 means that the token has no exipration date. The default is to have no expiration.</value>
        </member>
        <member name="M:VideoApiClient.Model.TokenCreatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.TokenCreatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.TokenListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.TokenListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.TokenListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.TokenListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.TokenListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.UploadToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.UploadToken.token">
            <summary>
            The unique identifier for the token you will use to authenticate an upload.
            </summary>
            <value>The unique identifier for the token you will use to authenticate an upload.</value>
        </member>
        <member name="P:VideoApiClient.Model.UploadToken.ttl">
            <summary>
            Time-to-live - how long the upload token is valid for.
            </summary>
            <value>Time-to-live - how long the upload token is valid for.</value>
        </member>
        <member name="P:VideoApiClient.Model.UploadToken.createdat">
            <summary>
            When the token was created, displayed in ISO-8601 format.
            </summary>
            <value>When the token was created, displayed in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.UploadToken.expiresat">
            <summary>
            When the token expires, displayed in ISO-8601 format.
            </summary>
            <value>When the token expires, displayed in ISO-8601 format.</value>
        </member>
        <member name="M:VideoApiClient.Model.UploadToken.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.UploadToken.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Video">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Video.videoid">
            <summary>
            The unique identifier of the video object.
            </summary>
            <value>The unique identifier of the video object.</value>
        </member>
        <member name="P:VideoApiClient.Model.Video.title">
            <summary>
            The title of the video content. 
            </summary>
            <value>The title of the video content. </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.description">
            <summary>
            A description for the video content. 
            </summary>
            <value>A description for the video content. </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.publishedat">
            <summary>
            The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.
            </summary>
            <value>The date and time the API created the video. Date and time are provided using ISO-8601 UTC format.</value>
        </member>
        <member name="P:VideoApiClient.Model.Video.updatedat">
            <summary>
            The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.
            </summary>
            <value>The date and time the video was updated. Date and time are provided using ISO-8601 UTC format.</value>
        </member>
        <member name="P:VideoApiClient.Model.Video.tags">
            <summary>
            One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces.  
            </summary>
            <value>One array of tags (each tag is a string) in order to categorize a video. Tags may include spaces.  </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.metadata">
            <summary>
            Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video.  
            </summary>
            <value>Metadata you can use to categorise and filter videos. Metadata is a list of dictionaries, where each dictionary represents a key value pair for categorising a video.  </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.source">
            <summary>
            Gets or Sets Source
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Video.assets">
            <summary>
            Gets or Sets Assets
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Video.playerid">
            <summary>
            The id of the player that will be applied on the video. 
            </summary>
            <value>The id of the player that will be applied on the video. </value>
        </member>
        <member name="P:VideoApiClient.Model.Video._public">
            <summary>
            Defines if the content is publicly reachable or if a unique token is needed for each play session. 
            </summary>
            <value>Defines if the content is publicly reachable or if a unique token is needed for each play session. </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.panoramic">
            <summary>
            Defines if video is panoramic. 
            </summary>
            <value>Defines if video is panoramic. </value>
        </member>
        <member name="P:VideoApiClient.Model.Video.mp4support">
            <summary>
            This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video. 
            </summary>
            <value>This lets you know whether mp4 is supported. If enabled, an mp4 URL will be provided in the response for the video. </value>
        </member>
        <member name="M:VideoApiClient.Model.Video.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Video.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoAssets">
            <summary>
            Collection of details about the video object that you can use to work with the video object.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoAssets.hls">
            <summary>
            This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.
            </summary>
            <value>This is the manifest URL. For HTTP Live Streaming (HLS), when a HLS video stream is initiated, the first file to download is the manifest. This file has the extension M3U8, and provides the video player with information about the various bitrates available for streaming.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoAssets.iframe">
            <summary>
            Code to use video from a third party website
            </summary>
            <value>Code to use video from a third party website</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoAssets.player">
            <summary>
            Raw url of the player.
            </summary>
            <value>Raw url of the player.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoAssets.thumbnail">
            <summary>
            Poster of the video.
            </summary>
            <value>Poster of the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoAssets.mp4">
            <summary>
            Available only if mp4Support is enabled. Raw mp4 url.
            </summary>
            <value>Available only if mp4Support is enabled. Raw mp4 url.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoAssets.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoAssets.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoCreatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.title">
            <summary>
            The title of your new video.
            </summary>
            <value>The title of your new video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.description">
            <summary>
            A brief description of your video.
            </summary>
            <value>A brief description of your video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.source">
            <summary>
            If you add a video already on the web, this is where you enter the url for the video.
            </summary>
            <value>If you add a video already on the web, this is where you enter the url for the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload._public">
            <summary>
            Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.
            </summary>
            <value>Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.panoramic">
            <summary>
            Indicates if your video is a 360/immersive video.
            </summary>
            <value>Indicates if your video is a 360/immersive video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.mp4support">
            <summary>
            Enables mp4 version in addition to streamed version.
            </summary>
            <value>Enables mp4 version in addition to streamed version.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.playerid">
            <summary>
            The unique identification number for your video player.
            </summary>
            <value>The unique identification number for your video player.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.tags">
            <summary>
            A list of tags you want to use to describe your video.
            </summary>
            <value>A list of tags you want to use to describe your video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.metadata">
            <summary>
            A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. You can also just use the pairs as another way to tag and categorize your videos.
            </summary>
            <value>A list of key value pairs that you use to provide metadata for your video. These pairs can be made dynamic, allowing you to segment your audience. You can also just use the pairs as another way to tag and categorize your videos.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoCreatePayload.publishedat">
            <summary>
            The API uses ISO-8601 format for time, and includes 3 places for milliseconds.
            </summary>
            <value>The API uses ISO-8601 format for time, and includes 3 places for milliseconds.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoCreatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoCreatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession.session">
            <summary>
            Gets or Sets Session
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession.location">
            <summary>
            Gets or Sets Location
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession.referrer">
            <summary>
            Gets or Sets Referrer
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession.device">
            <summary>
            Gets or Sets Device
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession.os">
            <summary>
            Gets or Sets Os
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSession._client">
            <summary>
            Gets or Sets _Client
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideoSession.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSession.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionClient">
            <summary>
            What kind of browser the viewer is using for the video session.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionClient.name">
            <summary>
            The name of the browser used to view the video session.
            </summary>
            <value>The name of the browser used to view the video session.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionClient.version">
            <summary>
            The version of the browser used to view the video session.
            </summary>
            <value>The version of the browser used to view the video session.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionClient.type">
            <summary>
            The type of client used to view the video session.
            </summary>
            <value>The type of client used to view the video session.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionClient.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionClient.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionDevice">
            <summary>
            What type of device the user is on when in the video session.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionDevice.type">
            <summary>
            What the type is like desktop, laptop, mobile.
            </summary>
            <value>What the type is like desktop, laptop, mobile.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionDevice.vendor">
            <summary>
            If known, what the brand of the device is, like Apple, Dell, etc.
            </summary>
            <value>If known, what the brand of the device is, like Apple, Dell, etc.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionDevice.model">
            <summary>
            The specific model of the device, if known.
            </summary>
            <value>The specific model of the device, if known.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionDevice.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionDevice.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionLocation">
            <summary>
            The location of the viewer.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionLocation.country">
            <summary>
            The country of the viewer.
            </summary>
            <value>The country of the viewer.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionLocation.city">
            <summary>
            The city of the viewer.
            </summary>
            <value>The city of the viewer.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionLocation.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionLocation.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionOs">
            <summary>
            The operating system the viewer is on.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionOs.name">
            <summary>
            The name of the operating system.
            </summary>
            <value>The name of the operating system.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionOs.shortname">
            <summary>
            The nickname for the operating system, often representing the version.
            </summary>
            <value>The nickname for the operating system, often representing the version.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionOs.version">
            <summary>
            The version of the operating system.
            </summary>
            <value>The version of the operating system.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionOs.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionOs.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionReferrer">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionReferrer.url">
            <summary>
            The link the viewer used to reach the video session.
            </summary>
            <value>The link the viewer used to reach the video session.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionReferrer.medium">
            <summary>
            How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement.
            </summary>
            <value>How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionReferrer.source">
            <summary>
            The source the referrer came from to the video session. For example if they searched through google to find the stream.
            </summary>
            <value>The source the referrer came from to the video session. For example if they searched through google to find the stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionReferrer.searchterm">
            <summary>
            The search term they typed to arrive at the video session.
            </summary>
            <value>The search term they typed to arrive at the video session.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionReferrer.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionReferrer.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSessionSession">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionSession.sessionid">
            <summary>
            The unique identifier for the session that you can use to track what happens during it.
            </summary>
            <value>The unique identifier for the session that you can use to track what happens during it.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionSession.loadedat">
            <summary>
            When the video session started, presented in ISO-8601 format.
            </summary>
            <value>When the video session started, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSessionSession.endedat">
            <summary>
            When the video session ended, presented in ISO-8601 format.
            </summary>
            <value>When the video session ended, presented in ISO-8601 format.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionSession.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSessionSession.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideosListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideosListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideosListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideosListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideosListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSource">
            <summary>
            Source information about the video.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSource.uri">
            <summary>
            The URL where the video is stored.
            </summary>
            <value>The URL where the video is stored.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSource.type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSource.livestream">
            <summary>
            Gets or Sets LiveStream
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideoSource.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSource.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSourceLiveStream">
            <summary>
            This appears if the video is from a Live Record.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSourceLiveStream.livestreamid">
            <summary>
            The unique identifier for the live stream.
            </summary>
            <value>The unique identifier for the live stream.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoSourceLiveStream.links">
            <summary>
            Gets or Sets Links
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideoSourceLiveStream.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSourceLiveStream.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoSourceLiveStreamLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSourceLiveStreamLink.rel">
            <summary>
            Gets or Sets Rel
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoSourceLiveStreamLink.uri">
            <summary>
            Gets or Sets Uri
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideoSourceLiveStreamLink.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoSourceLiveStreamLink.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Videostatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Videostatus.ingest">
            <summary>
            Gets or Sets Ingest
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Videostatus.encoding">
            <summary>
            Gets or Sets Encoding
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.Videostatus.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Videostatus.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideostatusEncoding">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncoding.playable">
            <summary>
            Whether the video is playable or not.
            </summary>
            <value>Whether the video is playable or not.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncoding.qualities">
            <summary>
            Available qualities the video can be viewed in.
            </summary>
            <value>Available qualities the video can be viewed in.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncoding.metadata">
            <summary>
            Gets or Sets Metadata
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusEncoding.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusEncoding.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideostatusEncodingMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.width">
            <summary>
            The width of the video in pixels.
            </summary>
            <value>The width of the video in pixels.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.height">
            <summary>
            The height of the video in pixels.
            </summary>
            <value>The height of the video in pixels.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.bitrate">
            <summary>
            The number of bits processed per second.
            </summary>
            <value>The number of bits processed per second.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.duration">
            <summary>
            The length of the video.
            </summary>
            <value>The length of the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.framerate">
            <summary>
            The frequency with which consecutive images or frames appear on a display. Shown in this API as frames per second (fps).
            </summary>
            <value>The frequency with which consecutive images or frames appear on a display. Shown in this API as frames per second (fps).</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.samplerate">
            <summary>
            How many samples per second a digital audio system uses to record an audio signal. The higher the rate, the higher the frequencies that can be recorded. They are presented in this API using hertz.
            </summary>
            <value>How many samples per second a digital audio system uses to record an audio signal. The higher the rate, the higher the frequencies that can be recorded. They are presented in this API using hertz.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.videocodec">
            <summary>
            The method used to compress and decompress digital video. API Video supports all codecs in the libavcodec library. 
            </summary>
            <value>The method used to compress and decompress digital video. API Video supports all codecs in the libavcodec library. </value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.audiocodec">
            <summary>
            The method used to compress and decompress digital audio for your video.
            </summary>
            <value>The method used to compress and decompress digital audio for your video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusEncodingMetadata.aspectratio">
            <summary>
            Gets or Sets AspectRatio
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusEncodingMetadata.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusEncodingMetadata.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideostatusIngest">
            <summary>
            Details about the capturing, transferring, and storing of your video for use immediately or in the future.
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusIngest.status">
            <summary>
            There are three possible ingest statuses. missing - you are missing information required to ingest the video. uploading - the video is in the process of being uploaded. uploaded - the video is ready for use.
            </summary>
            <value>There are three possible ingest statuses. missing - you are missing information required to ingest the video. uploading - the video is in the process of being uploaded. uploaded - the video is ready for use.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusIngest.filesize">
            <summary>
            The size of your file in bytes.
            </summary>
            <value>The size of your file in bytes.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideostatusIngest.receivedbytes">
            <summary>
            The total number of bytes received, listed for each chunk of the upload.
            </summary>
            <value>The total number of bytes received, listed for each chunk of the upload.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusIngest.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideostatusIngest.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoThumbnailPickPayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoThumbnailPickPayload.timecode">
            <summary>
            Frame in video to be used as a placeholder before the video plays.  Example: '\"00:01:00.000\" for 1 minute into the video.' Valid Patterns:  \"hh:mm:ss.ms\" \"hh:mm:ss:frameNumber\" \"124\" (integer value is reported as seconds)  If selection is out of range, \"00:00:00.00\" will be chosen.
            </summary>
            <value>Frame in video to be used as a placeholder before the video plays.  Example: '\"00:01:00.000\" for 1 minute into the video.' Valid Patterns:  \"hh:mm:ss.ms\" \"hh:mm:ss:frameNumber\" \"124\" (integer value is reported as seconds)  If selection is out of range, \"00:00:00.00\" will be chosen.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoThumbnailPickPayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoThumbnailPickPayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.VideoUpdatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.playerid">
            <summary>
            The unique ID for the player you want to associate with your video.
            </summary>
            <value>The unique ID for the player you want to associate with your video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.title">
            <summary>
            The title you want to use for your video.
            </summary>
            <value>The title you want to use for your video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.description">
            <summary>
            A brief description of the video.
            </summary>
            <value>A brief description of the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload._public">
            <summary>
            Whether the video is publicly available or not. False means it is set to private.
            </summary>
            <value>Whether the video is publicly available or not. False means it is set to private.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.panoramic">
            <summary>
            Whether the video is a 360 degree or immersive video.
            </summary>
            <value>Whether the video is a 360 degree or immersive video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.mp4support">
            <summary>
            Whether the player supports the mp4 format.
            </summary>
            <value>Whether the player supports the mp4 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.tags">
            <summary>
            A list of terms or words you want to tag the video with. Make sure the list includes all the tags you want as whatever you send in this list will overwrite the existing list for the video.
            </summary>
            <value>A list of terms or words you want to tag the video with. Make sure the list includes all the tags you want as whatever you send in this list will overwrite the existing list for the video.</value>
        </member>
        <member name="P:VideoApiClient.Model.VideoUpdatePayload.metadata">
            <summary>
            A list (array) of dictionaries where each dictionary contains a key value pair that describes the video. As with tags, you must send the complete list of metadata you want as whatever you send here will overwrite the existing metadata for the video.
            </summary>
            <value>A list (array) of dictionaries where each dictionary contains a key value pair that describes the video. As with tags, you must send the complete list of metadata you want as whatever you send here will overwrite the existing metadata for the video.</value>
        </member>
        <member name="M:VideoApiClient.Model.VideoUpdatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.VideoUpdatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.Webhook">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.Webhook.webhookid">
            <summary>
            Unique identifier of the webhook
            </summary>
            <value>Unique identifier of the webhook</value>
        </member>
        <member name="P:VideoApiClient.Model.Webhook.createdat">
            <summary>
            When an webhook was created, presented in ISO-8601 format.
            </summary>
            <value>When an webhook was created, presented in ISO-8601 format.</value>
        </member>
        <member name="P:VideoApiClient.Model.Webhook.events">
            <summary>
            A list of events that will trigger the webhook.
            </summary>
            <value>A list of events that will trigger the webhook.</value>
        </member>
        <member name="P:VideoApiClient.Model.Webhook.url">
            <summary>
            URL of the webhook
            </summary>
            <value>URL of the webhook</value>
        </member>
        <member name="M:VideoApiClient.Model.Webhook.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.Webhook.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.WebhooksCreatePayload">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.WebhooksCreatePayload.events">
            <summary>
            A list of the webhooks that you are subscribing to. Currently \"video.encoding.quality.completed\" is the only option. video.encoding.quality.completed - a video encoding quality is ready for the video (for example the 720p quality hls encoding video is ready.)
            </summary>
            <value>A list of the webhooks that you are subscribing to. Currently \"video.encoding.quality.completed\" is the only option. video.encoding.quality.completed - a video encoding quality is ready for the video (for example the 720p quality hls encoding video is ready.)</value>
        </member>
        <member name="P:VideoApiClient.Model.WebhooksCreatePayload.url">
            <summary>
            The the url to which HTTP notifications are sent. It could be any http or https URL.
            </summary>
            <value>The the url to which HTTP notifications are sent. It could be any http or https URL.</value>
        </member>
        <member name="M:VideoApiClient.Model.WebhooksCreatePayload.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.WebhooksCreatePayload.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="T:VideoApiClient.Model.WebhooksListResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.WebhooksListResponse.data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:VideoApiClient.Model.WebhooksListResponse.pagination">
            <summary>
            Gets or Sets Pagination
            </summary>
        </member>
        <member name="M:VideoApiClient.Model.WebhooksListResponse.ToString">
            <summary>
            Get the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:VideoApiClient.Model.WebhooksListResponse.ToJson">
            <summary>
            Get the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
    </members>
</doc>
